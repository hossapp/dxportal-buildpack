#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

EXIT_STATUS=0


function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

DXPORTAL_VERSION=`cat $ENV_DIR/DXPORTAL_VERSION`
GITHUB_AUTH_TOKEN=`cat $ENV_DIR/GITHUB_AUTH_TOKEN`
if test -f "$ENV_DIR/DXSCRIPTS_VERSION"; then
 DXSCRIPTS_VERSION=`cat $ENV_DIR/DXSCRIPTS_VERSION`
else
 DXSCRIPTS_VERSION="v1.1.1"
fi

git config --global advice.detachedHead false
topic "Cloning dxportal $DXPORTAL_VERSION tag"
git clone  --depth 1 --branch ${DXPORTAL_VERSION} https://${GITHUB_AUTH_TOKEN}:x-oauth-basic@github.com/hossapp/dxportal.git /tmp/dxportal | indent

topic "Copy customer files"
rsync -raz $BUILD_DIR/ /tmp/dxportal/ --exclude package.json --exclude package-lock.json | indent

# add customer dependencies to dxportal package.json
#topic "Merge dependencies"
#jq --argjson deps "$(jq ".dependencies" $BUILD_DIR/package.json)" '.dependencies += $deps' /tmp/dxportal/package.json > /tmp/dxportal/package.json_tmp && mv /tmp/dxportal/package.json_tmp /tmp/dxportal/package.json

topic "Moving dxportal files to top level"
rsync -raz /tmp/dxportal/ $BUILD_DIR/ | indent


topic "Installing dx-script $DXSCRIPTS_VERSION into /tmp/dx-scripts"
git clone  --depth 1 --branch $DXSCRIPTS_VERSION https://${GITHUB_AUTH_TOKEN}:x-oauth-basic@github.com/hossapp/dx-scripts.git /tmp/dx-scripts | indent
echo '/tmp/dx-scripts/bin/dx.js' > $ENV_DIR/DX_SCRIPTS_LOCATION

#ls -ahl $BUILD_DIR
#cat /tmp/dxportal/package.json
cat <<EOT > $BUILD_DIR/.npmrc
//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}
@hossapp:registry=https://npm.pkg.github.com/hossapp
//npm.pkg.github.com/:_authToken=${GITHUB_AUTH_TOKEN}
EOT
